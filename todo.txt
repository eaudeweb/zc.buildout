- Missing tests. See XXXs

- Buildout command-line options:

  --config -C specify a config files

  --option -O specify options

- Python discovery support

  (Perhaps this is best handled by DEFAULT section.

- Common recipes

  - configure-make-make-install

  - download, checkout

  - Should ot be possible to provide multiple recipies?
    Or should recipies be combined through inheritence (or
    composition)?

  - Python

- Need to better understand the way upgrading works in setuptools.

- Multiple setupfiles, 

  o extends, optionally-extends, extended-by, optionally-exteded-by

  o instance.ini

  o ~/buildout/default.ini

- Offline mode

- Local download cache

- Logging

Issue:

- If recipes require zc.buildout, there are weird problems for the
  tests, because we'll try to get zc.buildout when the test runs the
  recipe and there might not be a convenient way for it to do that.

  This is really a case of "plugins".  A plugin system has to be
  prepared to dynamically find eggs of the thing doing the plugging.
  This is a potential problem for my plan of just including eggs (or
  link dests) in generated script paths, as that would prevent a
  plugin system from finding the eggs already loaded.  We really need
  to include the egg dirs as well.  This feels a bit weird.

  Suppose you have some package, X and X supports plugins.  If X loads
  a plugin and the plugin requires X, then we need to be able to find
  X's egg.  Furthermore, if we upgrade the plugin when we find it, we
  will end up upgrading X, which makes no sense.  

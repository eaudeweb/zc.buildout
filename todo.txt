
- Need a better way to handle buildout updates.  If I update buildout
  and new versions of recipes depend on that, people will have to use
  the bootstrap script to get a newer version of buildout or the
  recipes won't load correctly.

  I either need a more clever recipe loader that can load older
  recipes when newer recipes aren't compatible with the existing
  buildout version, or I need to make the buildout self updating.

- Use setuptools PackageIndex objects to improve performance by
  deciding whether we need to download anything without using
  easy_install.

- tests

  - distribution dependency links

  - offline mode (there is an indirect test in the testrunner tests)


- Load from urls

- control python for develop (probably a new recipe)

- proper handling of extras

- Common recipes

  - configure-make-make-install

  - download, checkout

  - Should it be possible to provide multiple recipies?
    Or should recipies be combined through inheritence (or
    composition)?

  - Python

- Some way to freeze versions so we can have reproducable buildouts.

  Maybe simple approach:

  - Egg recipe outputs dependency info with debug logging

  - Egg recipe has option to specify dependencies.  When used, 
    don't automatically fetch newer data.

- Option to search python path for distros

- Part dependencies

- custom uninstall

- Fix develop so thet ordinary eggs fetched as dependencies end up
  in eggs directory.

  "fixed" except that fix is ineffective due to setuptools bug. :(
  

- spelling :)

- document recipe initialization order




Issues

- Should we include setuptools and buildout eggs for buildout process
  in environment when searching for requirements?

- We don't want to look for new versions of setuptools all the time.
  For now, we always use a local dist if there is one.  Needs more
  thought.

To do
*****

- Some way to freeze the egg-versions used.  This includes some way to
  record which versions were selected dynamially and then a way to
  require that the recorded versions be used in a later run.

Change History
**************

1.1.0 (unreleased)
==================

- Added `environment` option to custom extension building options.

1.0.0 (2007-11-03)
==================

- No code changes from last beta, just some small package meta-data
  improvements.

1.0.0b5 (2007-02-08)
====================

Feature Changes
---------------

- Added support for the buildout newest option.

1.0.0b4 (2007-01-17)
====================

Feature Changes
---------------

- Added initialization and arguments options to the scripts recipe.

- Added an eggs recipe that *just* installes eggs.

- Advertized the scripts recipe for creating scripts.

1.0.0b3 (2006-12-04)
====================

Feature Changes
---------------

- Added a develop recipe for creating develop eggs.

  This is useful to:

  - Specify custom extension building options,

  - Specify a version of Python to use, and to

  - Cause develop eggs to be created after other parts.

- The develop and build recipes now return the paths created, so that 
  created eggs or egg links are removed when a part is removed (or
  changed).


1.0.0b2 (2006-10-16)
====================

Updated to work with (not get a warning from) zc.buildout 1.0.0b10.

1.0.0b1
=======

Updated to work with zc.buildout 1.0.0b3.

1.0.0a3
=======

- Extra path elements to be included in generated scripts can now be
  set via the extra-paths option.

- No longer implicitly generate py\_ scripts fo reach egg. There is
  now an interpreter option to generate a script that, when run
  without arguments, launches the Python interactive interpreter with
  the path set based on a parts eggs and extra paths.  If this script
  is run with the name of a Python script and arguments, then the
  given script is run with the path set.

- You can now specify explicit entry points.  This is useful for use
  with packages that don't declare their own entry points.

- Added Windows support.

- Now-longer implicitly generate "py\_" scripts for each egg.  You can
  now generate a script for launching a Python interpreter or for
  running scripts based on the eggs defined for an egg part.

- You can now specify custom entry points for packages that don't
  declare their entry points.

- You can now specify extra-paths to be included in generated scripts.


1.0.0a2
=======

Added a custom recipe for building custom eggs using custom distrutils
build_ext arguments.

1.0.0a1
=======

Initial public version
